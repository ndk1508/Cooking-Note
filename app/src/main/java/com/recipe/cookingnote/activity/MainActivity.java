package com.recipe.cookingnote.activity;

import android.content.Intent;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.text.Editable;
import android.text.TextWatcher;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;

import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.recipe.cookingnote.R;
import com.recipe.cookingnote.Adapter.MonAnAdapter;
import com.recipe.cookingnote.database.DatabaseHelper;
import com.recipe.cookingnote.Model.MonAn;

import java.util.ArrayList;

public class MainActivity extends AppCompatActivity {

    // Khai b√°o c√°c view v√† bi·∫øn c·∫ßn thi·∫øt
    private RecyclerView recyclerView;
    private EditText edtSearch;
    private ImageButton btnClear;
    private FloatingActionButton fabAdd;
    private Button btnBreakfast, btnLunch, btnDinner, btnDessert, btnAll;

    private DatabaseHelper dbHelper;
    private ArrayList<MonAn> monAnList;
    private MonAnAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // üîπ √Ånh x·∫° c√°c th√†nh ph·∫ßn giao di·ªán (View) t·ª´ layout XML
        recyclerView = findViewById(R.id.recyclerView);
        edtSearch = findViewById(R.id.edtSearch);
        btnClear = findViewById(R.id.btnClear);
        fabAdd = findViewById(R.id.fabAdd);
        btnAll = findViewById(R.id.btnAll);
        btnBreakfast = findViewById(R.id.btnBreakfast);
        btnLunch = findViewById(R.id.btnLunch);
        btnDinner = findViewById(R.id.btnDinner);
        btnDessert = findViewById(R.id.btnDessert);
        LinearLayout btnFavorites = findViewById(R.id.btnFavorites);

        // üîπ Kh·ªüi t·∫°o database helper v√† danh s√°ch m√≥n ƒÉn
        dbHelper = new DatabaseHelper(this);
        monAnList = new ArrayList<>();

        // üîπ Thi·∫øt l·∫≠p RecyclerView hi·ªÉn th·ªã theo d·∫°ng danh s√°ch d·ªçc
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        // üîπ G·∫Øn adapter ƒë·ªÉ ƒëi·ªÅu khi·ªÉn hi·ªÉn th·ªã d·ªØ li·ªáu l√™n RecyclerView
        adapter = new MonAnAdapter(monAnList, this);
        recyclerView.setAdapter(adapter);

        // ‚ùå Kh√¥ng c·∫ßn t·∫£i d·ªØ li·ªáu ngay khi kh·ªüi t·∫°o ‚Äî v√¨ s·∫Ω t·ª± ƒë·ªông t·∫£i trong onResume()
        // loadDataFromDatabase(null, null);

        // üîπ L·∫Øng nghe s·ª± thay ƒë·ªïi trong √¥ t√¨m ki·∫øm
        edtSearch.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) { }

            // ‚úÖ Khi ng∆∞·ªùi d√πng nh·∫≠p v√†o √¥ t√¨m ki·∫øm ‚Üí l·ªçc d·ªØ li·ªáu theo t·ª´ kh√≥a
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                loadDataFromDatabase(s.toString(), null);
            }

            @Override
            public void afterTextChanged(Editable s) { }
        });

        // üîπ X·ª≠ l√Ω s·ª± ki·ªán nh·∫•n n√∫t ‚ÄúT·∫•t c·∫£‚Äù
        btnAll.setOnClickListener(v -> loadDataFromDatabase(null, null));

        // üîπ N√∫t ‚ÄúX‚Äù ƒë·ªÉ x√≥a n·ªôi dung t√¨m ki·∫øm
        btnClear.setOnClickListener(v -> edtSearch.setText(""));

        // üîπ C√°c n√∫t l·ªçc theo danh m·ª•c
        btnBreakfast.setOnClickListener(v -> loadDataFromDatabase(null, "ƒÇn s√°ng"));
        btnLunch.setOnClickListener(v -> loadDataFromDatabase(null, "ƒÇn tr∆∞a"));
        btnDinner.setOnClickListener(v -> loadDataFromDatabase(null, "ƒÇn t·ªëi"));
        btnDessert.setOnClickListener(v -> loadDataFromDatabase(null, "Tr√°ng mi·ªáng"));

        // üîπ N√∫t m·ªü trang ‚ÄúDanh s√°ch y√™u th√≠ch‚Äù
        btnFavorites.setOnClickListener(v -> {
            Intent intent = new Intent(MainActivity.this, YeuThichActivity.class);
            startActivity(intent);
        });

        // üîπ N√∫t ‚Äú+‚Äù ƒë·ªÉ th√™m m√≥n ƒÉn m·ªõi
        fabAdd.setOnClickListener(v -> {
            Intent intent = new Intent(MainActivity.this, ThemMonAnActivity.class);
            startActivity(intent);
        });
    }

    // ‚≠ê Ph∆∞∆°ng th·ª©c onResume() ‚Äî ch·∫°y m·ªói khi m√†n h√¨nh ch√≠nh hi·ªÉn th·ªã l·∫°i
    @Override
    protected void onResume() {
        super.onResume();
        // ‚úÖ Lu√¥n t·∫£i l·∫°i d·ªØ li·ªáu m·ªõi nh·∫•t (sau khi th√™m, s·ª≠a, x√≥a m√≥n ƒÉn)
        loadDataFromDatabase(null, null);
    }

    /**
     * üì¶ Ph∆∞∆°ng th·ª©c t·∫£i d·ªØ li·ªáu t·ª´ SQLite v√† hi·ªÉn th·ªã l√™n RecyclerView.
     * @param keyword  T·ª´ kh√≥a t√¨m ki·∫øm (c√≥ th·ªÉ null)
     * @param category T√™n danh m·ª•c c·∫ßn l·ªçc (c√≥ th·ªÉ null)
     */
    private void loadDataFromDatabase(String keyword, String category) {
        monAnList.clear(); // X√≥a d·ªØ li·ªáu c≈© tr∆∞·ªõc khi n·∫°p m·ªõi
        SQLiteDatabase db = dbHelper.getReadableDatabase();
        Cursor cursor = null;

        try {
            // üîπ C√¢u truy v·∫•n c∆° b·∫£n k·∫øt h·ª£p b·∫£ng MonAn v√† DanhMuc
            String query = "SELECT MonAn.idMonAn, MonAn.tenMon, MonAn.moTa, MonAn.anhMon, DanhMuc.tenDanhMuc " +
                    "FROM MonAn LEFT JOIN DanhMuc ON MonAn.idDanhMuc = DanhMuc.idDanhMuc";

            ArrayList<String> selectionArgs = new ArrayList<>();
            String whereClause = "";

            // üîπ N·∫øu c√≥ t·ª´ kh√≥a t√¨m ki·∫øm ‚Üí th√™m ƒëi·ªÅu ki·ªán LIKE
            if (keyword != null && !keyword.isEmpty()) {
                whereClause += " MonAn.tenMon LIKE ?";
                selectionArgs.add("%" + keyword + "%");
            }

            // üîπ N·∫øu c√≥ danh m·ª•c l·ªçc ‚Üí th√™m ƒëi·ªÅu ki·ªán AND
            if (category != null && !category.isEmpty()) {
                if (!whereClause.isEmpty()) {
                    whereClause += " AND";
                }
                whereClause += " DanhMuc.tenDanhMuc = ?";
                selectionArgs.add(category);
            }

            // üîπ N·∫øu c√≥ ƒëi·ªÅu ki·ªán ‚Üí n·ªëi WHERE v√†o c√¢u truy v·∫•n
            if (!whereClause.isEmpty()) {
                query += " WHERE" + whereClause;
            }

            // üîπ Th·ª±c thi truy v·∫•n
            cursor = db.rawQuery(query, selectionArgs.toArray(new String[0]));

            // üîπ Duy·ªát k·∫øt qu·∫£ v√† th√™m v√†o danh s√°ch
            if (cursor.moveToFirst()) {
                do {
                    int id = cursor.getInt(0);
                    String ten = cursor.getString(1);
                    String moTa = cursor.getString(2);
                    String anh = cursor.getString(3);
                    String danhMuc = cursor.getString(4);

                    // ‚úÖ Th√™m m√≥n ƒÉn v√†o danh s√°ch
                    monAnList.add(new MonAn(id, ten, moTa, anh, danhMuc));
                } while (cursor.moveToNext());
            }
        } finally {
            // üîπ ƒê·∫£m b·∫£o ƒë√≥ng Cursor & Database ƒë·ªÉ tr√°nh r√≤ r·ªâ b·ªô nh·ªõ
            if (cursor != null) cursor.close();
            if (db != null && db.isOpen()) db.close();
        }

        // üîπ C·∫≠p nh·∫≠t l·∫°i giao di·ªán danh s√°ch
        adapter.notifyDataSetChanged();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        // üîπ ƒê√≥ng k·∫øt n·ªëi DatabaseHelper khi Activity b·ªã h·ªßy
        if (dbHelper != null) {
            dbHelper.close();
        }
    }
}
